<%- include('../wrapper/header') %>

<!-- Sidebar -->
<%- include('../components/sidenav') %>

<div class="flex-1 md:ml-40 p-8">
  <div class="overflow-x-auto">
    <div class="flex justify-between my-5">
      <h1 class="text-3xl font-bold"><%= title %></h1>
      <div class="flex gap-5">
        <a
          href="javascript:void(0);"
          id="openModalButton"
          class="w-14 bg-blue-500 text-white py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-red-400 flex justify-center"
        >
          <img src="/addredirect.png" class="h-6 w-6" alt="add redirect" />
        </a>
      </div>
    </div>

    <!-- Delete Confirmation Popup -->
    <div
      id="delete-confirmation"
      class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden"
    >
      <div class="bg-white p-6 rounded-lg shadow-lg w-96">
        <h2 class="text-xl font-semibold mb-4">Are you sure?</h2>
        <p class="text-gray-600 mb-6">
          Do you really want to delete the redirect:
          <span class="font-bold" id="redirect-title">redirect</span>?
        </p>
        <div class="flex justify-end gap-4">
          <button
            id="cancel-delete"
            class="bg-gray-200 text-gray-800 px-4 py-2 rounded hover:bg-gray-300"
          >
            Cancel
          </button>
          <button
            id="confirm-delete"
            class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700"
          >
            Delete
          </button>
        </div>
      </div>
    </div>

    <!-- Redirect Form Modal -->
    <div
      id="modal"
      class="modal fixed inset-0 z-10 bg-black bg-opacity-50 flex justify-center items-center hidden"
    >
      <div class="bg-white p-6 rounded-lg shadow-lg w-96">
        <h2 id="modal-title" class="text-xl font-semibold mb-4">
          Create New 301 Redirect
        </h2>

        <form
          id="redirect-form"
          class="grid grid-cols-2 gap-4"
          enctype="multipart/form-data"
        >
          <div class="col-span-2">
            <p class="text-gray-600 mb-2">Redirect From</p>
            <input
              type="url"
              id="redirect-from"
              required
              minlength="3"
              class="w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="https://www.example.com/old-page"
            />
            <p class="text-red-600 mt-1" id="redirectFromError"></p>
          </div>

          <div class="col-span-2">
            <p class="text-gray-600 mb-2">Redirect To</p>
            <input
              type="url"
              id="redirect-to"
              required
              minlength="3"
              class="w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="https://www.example.com/new-page"
            />
            <p class="text-red-600 mt-1" id="redirectToError"></p>
          </div>
        </form>

        <div class="flex justify-end gap-4 mt-6">
          <button
            id="saveRedirect"
            class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
          >
            Save
          </button>
          <button id="closeModalButton" class="bg-gray-300 px-4 py-2 rounded">
            Cancel
          </button>
        </div>
      </div>
    </div>

    <table class="min-w-full bg-white border rounded-lg shadow-lg">
      <thead class="bg-blue-100">
        <tr>
          <th class="py-2 px-4 text-left text-blue-900 min-w-[50px]">SlNo</th>
          <th class="py-2 px-4 text-left text-blue-900 min-w-[100px]">
            Redirect From
          </th>
          <th class="py-2 px-4 text-left text-blue-900 min-w-[100px]">
            Redirect To
          </th>
          <th class="py-2 px-4 text-left text-blue-900 min-w-[100px]">
            Action
          </th>
        </tr>
      </thead>
      <tbody>
        <% if (data.length > 0) { %> <% for (let i = 0; i < data.length; i++) {
        %>
        <tr class="border border-gray-200">
          <td class="py-2 px-4 text-blue-900 border border-gray-200 w-20">
            <%= i + 1 %>
          </td>
          <td class="py-2 px-4 text-blue-900 border border-gray-200 w-72">
            <a
              href="<%= data[i].dataValues.redirect_from %>"
              target="_blank"
              class="text-ellipsis"
            >
              <%= data[i].dataValues.redirect_from %>
            </a>
          </td>
          <td class="py-2 px-4 text-blue-900 border border-gray-200 w-72">
            <a
              href="<%= data[i].dataValues.redirect_to %>"
              target="_blank"
              class="text-ellipsis"
            >
              <%= data[i].dataValues.redirect_to %>
            </a>
          </td>
          <td class="py-2 px-4 space-x-2 border border-gray-200 w-40">
            <div class="flex justify-start gap-x-5 max-xl:w-52">
              <a
                href="javascript:void(0);"
                data-id="<%= data[i].dataValues.id %>"
                data-redirect-from="<%= data[i].dataValues.redirect_from %>"
                data-redirect-to="<%= data[i].dataValues.redirect_to %>"
                class="bg-blue-500 p-2 rounded hover:text-blue-800 edit-link"
              >
                <img src="/edit.svg" class="w-7 h-7" alt="edit icon" />
              </a>
              <a
                href="javascript:void(0);"
                data-id="<%= data[i].dataValues.id %>"
                data-title="<%= data[i].dataValues.redirect_from %>"
                class="bg-red-500 p-2 rounded text-red-600 hover:text-red-800 delete-link"
              >
                <img src="/delete.svg" class="w-7 h-7" alt="delete icon" />
              </a>
            </div>
          </td>
        </tr>
        <% } %> <% } %>
      </tbody>
    </table>
  </div>
</div>

<%- include('../wrapper/footer') %>

<!-- Script for Modal functionality -->
<script>
  // Get elements
  const modal = document.getElementById("modal");
  const openModalButton = document.getElementById("openModalButton");
  const closeModalButton = document.getElementById("closeModalButton");
  const saveRedirectButton = document.getElementById("saveRedirect");
  const redirectFromInput = document.getElementById("redirect-from");
  const redirectToInput = document.getElementById("redirect-to");
  const form = document.getElementById("redirect-form");

  let editingRedirectId = null; // Store the ID of the redirect being edited

  // Function to open modal and reset form fields
  openModalButton.addEventListener("click", () => {
    // Reset form values to null or empty
    redirectFromInput.value = "";
    redirectToInput.value = "";

    // Set modal title
    document.getElementById("modal-title").textContent =
      "Create New 301 Redirect";

    // Show modal
    modal.classList.remove("hidden");
    editingRedirectId = null; // Reset editing ID
  });

  // Function to close modal
  closeModalButton.addEventListener("click", () => {
    modal.classList.add("hidden");
  });

  // Function to save redirect (console log input values)
  saveRedirectButton.addEventListener("click", async (event) => {
    document.getElementById("redirectFromError").classList.add("hidden");
    document.getElementById("redirectToError").classList.add("hidden");
    event.preventDefault();

    // Fetch input values
    const redirectFrom = redirectFromInput.value;
    const redirectTo = redirectToInput.value;

    const method = editingRedirectId ? "PUT" : "POST";
    const url = editingRedirectId
      ? `${window.location.origin}/admin/redirect/${editingRedirectId}`
      : `${window.location.origin}/admin/redirect`;

    // Log input values to the console
    console.log("Redirect From:", redirectFrom);
    console.log("Redirect To:", redirectTo);

    const response = await fetch(url, {
      method: method,
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        redirect_from: redirectFrom,
        redirect_to: redirectTo,
      }),
    });

    const result = await response.json();

    if (response.status == 201 || response.status == 200) {
      showToast("Saved Successfully", true);
      // Reset form fields after saving
      form.reset();

      // Close the modal
      modal.classList.add("hidden");
    } else {
      if (result?.type == "redirectFrom") {
        document.getElementById("redirectFromError").classList.remove("hidden");
        document.getElementById("redirectFromError").innerText = result?.err;
      } else if (result?.type == "redirectTo") {
        document.getElementById("redirectToError").classList.remove("hidden");
        document.getElementById("redirectToError").innerText = result?.err;
      } else {
        console.log(result?.err);
        showToast(result?.err, false);
      }
    }
  });

  function showToast(message, isSuccess) {
    const toast = document.createElement("div");
    toast.className = `fixed bottom-4 right-4 p-4 rounded-lg shadow-lg text-white ${
      isSuccess ? "bg-green-500" : "bg-red-500"
    }`;
    toast.innerText = message;
    document.body.appendChild(toast);
    setTimeout(() => {
      toast.remove();
      if (isSuccess) window.location.href = "/admin/redirect";
    }, 2000);
  }

  // Function to handle edit button click
  document.querySelectorAll(".edit-link").forEach((button) => {
    button.addEventListener("click", (event) => {
      event.preventDefault(); // Prevent default link behavior

      // Get redirect details from the clicked button
      editingRedirectId = button.getAttribute("data-id");
      const redirectFrom = button.getAttribute("data-redirect-from");
      const redirectTo = button.getAttribute("data-redirect-to");

      // Set form fields with existing data
      redirectFromInput.value = redirectFrom;
      redirectToInput.value = redirectTo;

      // Update modal title
      document.getElementById("modal-title").textContent = "Edit 301 Redirect";

      // Show modal
      modal.classList.remove("hidden");
    });
  });

  // Get elements for delete confirmation
  const deleteConfirmationModal = document.getElementById(
    "delete-confirmation"
  );
  const cancelDeleteButton = document.getElementById("cancel-delete");
  const confirmDeleteButton = document.getElementById("confirm-delete");
  const redirectTitle = document.getElementById("redirect-title");

  let deleteRedirectId = null; // Store the ID of the redirect to delete

  // Function to open delete confirmation modal
  document.querySelectorAll(".delete-link").forEach((button) => {
    button.addEventListener("click", (event) => {
      event.preventDefault(); // Prevent default link behavior

      // Get redirect details from the clicked button
      deleteRedirectId = button.getAttribute("data-id");
      const title = button.getAttribute("data-title");

      // Update modal content
      redirectTitle.textContent = title;

      // Show the delete confirmation modal
      deleteConfirmationModal.classList.remove("hidden");
    });
  });

  // Function to close delete confirmation modal
  cancelDeleteButton.addEventListener("click", () => {
    deleteConfirmationModal.classList.add("hidden");
  });

  // Function to confirm and perform deletion
  confirmDeleteButton.addEventListener("click", async () => {
    if (deleteRedirectId === null) return;

    // Hide delete confirmation modal and refresh page
    deleteConfirmationModal.classList.add("hidden");

    const response = await fetch(
      `${window.location.origin}/admin/redirect/${deleteRedirectId}`,
      {
        method: "DELETE",
      }
    );

    if (response?.ok) {
      showToast("Successfully Deleted", false);
      setTimeout(() => {
        window.location.reload();
      }, 2000);
    }
  });

  // Function to show toast notifications
  function showToast(message, isSuccess) {
    const toast = document.createElement("div");
    toast.className = `fixed bottom-4 right-4 p-4 z-[-1] rounded-lg shadow-lg text-white ${
      isSuccess ? "bg-green-500" : "bg-red-500"
    }`;
    toast.innerText = message;
    document.body.appendChild(toast);
    setTimeout(() => {
      toast.remove();
      if (isSuccess) window.location.href = "/admin/redirect";
    }, 3000);
  }
</script>
