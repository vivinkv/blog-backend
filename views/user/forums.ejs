<%- include('../wrapper/header') %>
<div class="flex">
  <%- include('../components/sidenav') %>

  <!-- Responsive Sidebar Button -->
  <div class="md:hidden p-4">
    <button id="menu-btn" class="text-blue-900 focus:outline-none">
      <svg
        id="hamburger-icon"
        class="w-8 h-8"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"
        ></path>
      </svg>
      <svg
        id="close-icon"
        class="w-8 h-8 hidden"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"
        ></path>
      </svg>
    </button>
  </div>

  <!-- Main Content (Tabs) -->
  <div class="flex-1 md:ml-40 p-8">
    <div class="overflow-x-auto">
      <div class="flex justify-start my-5">
        <h1 class="text-3xl font-bold"><%= name %></h1>
      </div>
      <div class="flex justify-start rounded-none mb-1 space-x-4">
        <a href="/admin/user/<%= id %>"
          id="profile-tab"
          class="tab-button active px-10 py-2 rounded-lg bg-blue-700 text-white hover:bg-blue-500"
          onclick="setActiveTab('profile-tab')"
        >
          Profile
        </a>
        <a href="/admin/user/<%= id %>/blogs"
          id="blogs-tab"
          class="tab-button px-10 py-2 rounded-lg bg-blue-700 text-white hover:bg-blue-500"
          onclick="setActiveTab('blogs-tab')"
        >
          Blogs
        </a>
        <a href="/admin/user/<%= id %>/forums"
          id="forums-tab"
          class="tab-button px-10 py-2 rounded-lg bg-blue-700 text-white hover:bg-blue-500"
          onclick="setActiveTab('forums-tab')"
        >
          Forums
        </a>
      </div>
    </div>
  </div>
</div>

<!-- Main Content (Table) -->
<div class="flex-1 md:ml-40 p-8">
    <div class="overflow-x-auto">
      <table class="min-w-full bg-white border rounded-lg shadow-lg">
        <thead class="bg-blue-100">
          <tr>
            <th class="py-2 px-4 text-left text-blue-900 min-w-[30rem]">Title</th>
            <th class="py-2 px-4 text-left text-blue-900 min-w-[10rem]">Posted By</th>
            <th class="py-2 px-4 text-left text-blue-900 min-w-[10rem]">Posted Date</th>
            <th class="py-2 px-4 text-left text-blue-900 min-w-[10rem]">Status</th>
            <th class="py-2 px-4 text-left text-blue-900 min-w-[100px]">Action</th>
          </tr>
        </thead>
        <tbody>
          <% if (data.length > 0) { %> 
          <% for (let i = 0; i < data.length; i++) { %>
          <tr class="border border-gray-200">
            <td class="py-2 px-4 text-blue-900 border border-gray-200 w-72">
              <a href="" class="text-ellipsis"><%= data[i].dataValues.title %></a>
            </td>
            <td class="py-2 px-4 text-blue-900 border border-gray-200 w-56">
              <a href="" class="text-ellipsis"><%= name %></a>
            </td>
            <td class="py-2 px-4 text-blue-900 border border-gray-200 w-32">
              <a href="" class="text-ellipsis"><%= new Date(data[i].dataValues.createdAt).toLocaleDateString('en-GB') %></a>
            </td>
            <td class="py-2 px-4 text-blue-900 border border-gray-200 w-32">
              <% 
                let status = data[i].dataValues.status;
                let statusClass = "";
                switch (status) {
                  case "not-reviewed":
                    statusClass = "bg-gray-200 text-gray-800 px-2 py-1 rounded";
                    break;
                  case "approved":
                    statusClass = "bg-green-200 text-green-800 px-2 py-1 rounded";
                    break;
                  case "on-hold":
                    statusClass = "bg-yellow-200 text-yellow-800 px-2 py-1 rounded";
                    break;
                  case "rejected":
                    statusClass = "bg-red-200 text-red-800 px-2 py-1 rounded";
                    break;
                  default:
                    statusClass = "bg-gray-200 text-gray-800 px-2 py-1 rounded";
                }
              %>
              <a href="javascript:void(0);" class="text-ellipsis status-link <%= statusClass %>" data-id="<%= data[i].dataValues.id %>">
                <%= status.replace(/-/g, ' ').replace(/\b\w/g, char => char.toUpperCase()) %>
              </a>
            </td>
            <td class="py-2 px-4 space-x-2 border border-gray-200">
              <div class="flex justify-center gap-x-5 max-xl:w-52">
                <a href="/admin/dashboard/forums/update/<%= data[i].dataValues.id %>" class="bg-blue-500 p-2 rounded hover:text-blue-800">
                  <img src="/edit.svg" class="w-7 h-7" alt="edit icon" />
                </a>
                <% if(!data[i].dataValues.published) { %>
                <a href="javascript:void(0);" data-id="<%= data[i].dataValues.id %>" data-title="<%= data[i].dataValues.title %>" class="bg-red-500 p-2 rounded text-red-600 hover:text-red-800 delete-link">
                  <img src="/delete.svg" class="w-7 h-7" alt="delete icon" />
                </a>
                <% } %>
              </div>
            </td>
          </tr>
          <% } %> 
          <% } %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Status Change Modal -->
  <div id="status-change-modal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden">
    <div class="bg-white p-6 rounded-lg shadow-lg w-96">
      <h2 class="text-xl font-semibold mb-4">Change Status</h2>
      <p class="text-gray-600 mb-4">Select the new status:</p>
      <select id="new-status" class="w-full px-4 py-2 mb-4 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500">
        <option value="not-reviewed">Not Reviewed</option>
        <option value="approved">Approved</option>
        <option value="on-hold">On Hold</option>
        <option value="rejected">Rejected</option>
      </select>
      <div class="flex justify-end gap-4">
        <button id="cancel-status-change" class="bg-gray-200 text-gray-800 px-4 py-2 rounded hover:bg-gray-300">Cancel</button>
        <button id="confirm-status-change" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Save</button>
      </div>
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div id="delete-confirmation-modal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden">
    <div class="bg-white p-6 rounded-lg shadow-lg w-96">
      <h2 class="text-xl font-semibold mb-4">Delete Confirmation</h2>
      <p class="text-gray-600 mb-4">Are you sure you want to delete this forum?</p>
      <div class="flex justify-end gap-4">
        <button id="cancel-delete" class="bg-gray-200 text-gray-800 px-4 py-2 rounded hover:bg-gray-300">Cancel</button>
        <button id="confirm-delete" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700">Delete</button>
      </div>
    </div>
  </div>

  <script>
    // JavaScript to handle tab switching and fetching data
    const profileTab = document.getElementById("profile-tab");
    const blogsTab = document.getElementById("blogs-tab");
    const forumsTab = document.getElementById("forums-tab");
    const userId = "<%= data.id %>";

    profileTab.addEventListener("click", () => {
      setActiveTab('profile-tab');
    });

    blogsTab.addEventListener("click", async () => {
      setActiveTab('blogs-tab');
      // Fetch blogs data
      const response = await fetch(`${window.location.origin}/admin/user/${userId}/blogs`);
      const blogs = await response.json();
      const blogsTableBody = document.getElementById("blogs-table-body");
      blogsTableBody.innerHTML = "";
      blogs.data.forEach((blog) => {
        const row = document.createElement("tr");
        row.innerHTML = `
          <td class="py-2 px-4 text-blue-900 border border-gray-200 w-72">${blog.title}</td>
          <td class="py-2 px-4 text-blue-900 border border-gray-200 w-56">${blog.author}</td>
          <td class="py-2 px-4 text-blue-900 border border-gray-200 w-32">${blog.publish_date}</td>
          <td class="py-2 px-4 space-x-2 border border-gray-200 w-36">
            <button class="text-blue-500">Edit</button>
            <button class="text-red-500">Delete</button>
          </td>
        `;
        blogsTableBody.appendChild(row);
      });
    });

    forumsTab.addEventListener("click", async () => {
      setActiveTab('forums-tab');
      // Fetch forums data
      const response = await fetch(`${window.location.origin}/admin/user/${userId}/forums`);
      const forums = await response.json();
      const forumsTableBody = document.getElementById("forums-table-body");
      forumsTableBody.innerHTML = "";
      forums.data.forEach((forum) => {
        const row = document.createElement("tr");
        row.innerHTML = `
          <td class="py-2 px-4 border-b w-72">${forum.title}</td>
          <td class="py-2 px-4 border-b w-36">${forum.forum_user.name}</td>
          <td class="py-2 px-4 border-b w-20">${new Date(forum.createdAt).toLocaleDateString("en-GB")}</td>
          <td class="py-2 px-4 border-b w-36">
            <a href="javascript:void(0);" class="text-blue-500 status-link" data-id="${forum.id}">Change Status</a>
            <a href="javascript:void(0);" class="text-red-500 delete-link" data-id="${forum.id}">Delete</a>
          </td>
        `;
        forumsTableBody.appendChild(row);
      });
    });

    // Status Change Modal Logic
    const statusLinks = document.querySelectorAll(".status-link");
    const statusChangeModal = document.getElementById("status-change-modal");
    const newStatus = document.getElementById("new-status");
    const cancelStatusChangeBtn = document.getElementById("cancel-status-change");
    const confirmStatusChangeBtn = document.getElementById("confirm-status-change");

    let currentStatusId = null;

    statusLinks.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();
        currentStatusId = link.getAttribute("data-id");
        statusChangeModal.classList.remove("hidden");
      });
    });

    confirmStatusChangeBtn.addEventListener("click", async () => {
      if (currentStatusId) {
        const selectedStatus = newStatus.value;
        try {
          const response = await fetch(`/admin/dashboard/forums?id=${currentStatusId}&status=${selectedStatus}`);
          if (response.ok) {
            window.location.reload();
          } else {
            console.error("Failed to update status");
          }
        } catch (error) {
          console.error(error);
        }
      }
    });

    cancelStatusChangeBtn.addEventListener("click", () => {
      statusChangeModal.classList.add("hidden");
    });

    // Delete Logic
    const deleteLinks = document.querySelectorAll(".delete-link");
    const deleteConfirmationModal = document.getElementById("delete-confirmation-modal");
    const cancelDeleteBtn = document.getElementById("cancel-delete");
    const confirmDeleteBtn = document.getElementById("confirm-delete");
    let currentDeleteId = null;

    deleteLinks.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();
        currentDeleteId = link.getAttribute("data-id");
        deleteConfirmationModal.classList.remove("hidden");
      });
    });

    confirmDeleteBtn.addEventListener("click", async () => {
      if (currentDeleteId) {
        try {
          const response = await fetch(`${window.location.origin}/admin/dashboard/forums/delete/${currentDeleteId}`);
          if (response.ok) {
            window.location.reload();
          } else {
            console.error("Failed to delete forum");
          }
        } catch (error) {
          console.error(error);
        }
      }
    });

    cancelDeleteBtn.addEventListener("click", () => {
      deleteConfirmationModal.classList.add("hidden");
    });
  </script>

  <script>
    const menuBtn = document.getElementById("menu-btn");
    const sidebar = document.getElementById("sidebar");
    const hamburgerIcon = document.getElementById("hamburger-icon");
    const closeIcon = document.getElementById("close-icon");

    menuBtn.addEventListener("click", (event) => {
      event.stopPropagation();
      sidebar.classList.toggle("-translate-x-full");
      hamburgerIcon.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
    });

    document.addEventListener("click", (event) => {
      if (!sidebar.contains(event.target) && !menuBtn.contains(event.target) && !sidebar.classList.contains("-translate-x-full")) {
        sidebar.classList.add("-translate-x-full");
        hamburgerIcon.classList.remove("hidden");
        closeIcon.classList.add("hidden");
      }
    });
  </script>

  <script>
    function setActiveTab(activeTabId) {
      const tabs = document.querySelectorAll(".tab-button");
      tabs.forEach((tab) => {
        if (tab.id === activeTabId) {
          tab.classList.add("active");
          tab.classList.remove("bg-blue-700");
          tab.classList.add("bg-blue-500");
        } else {
          tab.classList.remove("active");
          tab.classList.add("bg-blue-700");
          tab.classList.remove("bg-blue-500");
        }
      });
    }
  </script>

<%- include('../wrapper/footer') %>
